[project]
name = "{{ cookiecutter.project_name }}"
authors = [{name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.email }}"}]
requires-python = ">= 3.11"
dependencies = []
readme = "README.md"
license = {file = "LICENSE"}
classifiers = ["License :: OSI Approved :: MIT License"]
version="0.1.0"
description="nestdictmod"


[project.optional-dependencies]
test = ["pytest"]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
nestdictmod = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.dependencies]
python = "3.12.*"
pixi-pycharm = ">=0.0.6,<0.0.7"

[tool.pixi.environments]
test = ["test"]
mypy = ["mypy"]
pythonbuild = { features = ["pythonbuild"], no-default-feature = true, solve-group = "default" }
condabuild = { features = ["condabuild"], no-default-feature = true, solve-group = "default" }
lint = { features = ["lint"], no-default-feature = true, solve-group = "default" }

[tool.pixi.feature.lint.dependencies]
ruff = "*"
pre-commit = ">=3.7.1,<4"
pre-commit-hooks = ">=4.6.0,<5"
typos = ">=1.23.1,<2"

[tool.pixi.feature.lint.tasks]
pre-commit-install = "pre-commit install"
pre-commit-run = "pre-commit run --all"
lint = { depends-on = ["pre-commit-run"] }

[tool.pixi.feature.test.tasks]
tests = "pytest"

[tool.pixi.feature.mypy.dependencies]
mypy = "*"
numpy = ">=2.1.1,<3"

[tool.pixi.feature.mypy.tasks]
mypy = "mypy ."

[tool.pixi.feature.condabuild.dependencies]
conda-build = "*"

[tool.pixi.feature.condabuild.tasks]
condabuild = "conda build conda-recipe/"

[tool.pixi.feature.pythonbuild.dependencies]
build = "*"

[tool.pixi.feature.pythonbuild.tasks]
pythonbuild = "python3 -m build"

[tool.pytest.ini_options]
pythonpath = "src"
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
python_version = "3.12"
disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
exclude = ["tests"]
